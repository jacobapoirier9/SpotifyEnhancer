{"version":3,"file":"spotify.js","sourceRoot":"","sources":["../ts/spotify.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../lib/jquery/dist/jquery.d.ts\" />\r\n/// <reference path=\"../lib/jqgrid/jqGrid.d.ts\" />\r\n\r\nvar config = {\r\n    loadCurrentlyPlayingInterval: 60_000\r\n}\r\n\r\nvar helpers = {\r\n    interval: {\r\n        set(callback: () => void, interval: number) {\r\n            callback()\r\n            setInterval(callback, interval)\r\n        }\r\n    },\r\n\r\n    coalesce(...params: any[]) {\r\n        for (var i in params) {\r\n            if (!helpers.isNullOfUndefined(params[i])) {\r\n                return params[i]\r\n            }\r\n        }\r\n        return null\r\n    },\r\n\r\n    isNullOfUndefined(item: any) {\r\n        return item === null || item === undefined\r\n    },\r\n\r\n    getJson(selector: string) {\r\n        return JSON.parse($(selector).val())\r\n    },\r\n\r\n    createGridModel(options: JqGridOptions): JqGridOptions {\r\n        var defaults: JqGridOptions = {\r\n            datatype: 'local',\r\n            emptyrecords: 'No records to display',\r\n            gridview: true,\r\n            loadonce: true,\r\n            rowNum: 50,\r\n            forceFit: true,\r\n            sortable: true,\r\n            sortorder: 'asc',\r\n            styleUI: 'Bootstrap',\r\n            viewrecords: true,\r\n            jsonReader: {\r\n                root: 'Rows',\r\n                page: 'Page',\r\n                total: 'Total',\r\n                records: 'Records',\r\n                repeatitems: false,\r\n            }\r\n        }\r\n\r\n        $.extend(defaults, options)\r\n        return defaults\r\n    },\r\n    grid: {\r\n        setGridWidthToParentWidth: function ($grid: JQuery) {\r\n            var width = Math.floor($grid.closest(\".ui-jqgrid\").parent().width());\r\n            $grid.jqGrid(\"setGridWidth\", width);\r\n        },\r\n        setGridHeightToViewportHeight: function ($grid: JQuery) {\r\n            // @ts-ignore\r\n            var height = parseInt($(window).height() - $grid.offset().top - ($(\"header\").height() || 0) - ($(\".box-footer\").height() || 0));\r\n            $grid.jqGrid(\"setGridHeight\", height);\r\n        },\r\n        resizeGridOnWindowResize: function ($grid: JQuery) {\r\n            $(window).on(\"resize expanded.pushMenu collapsed.pushMenu\", function () {\r\n                setTimeout(function () {\r\n                    helpers.grid.setGridHeightToViewportHeight($grid);\r\n                    helpers.grid.setGridWidthToParentWidth($grid);\r\n                }, 350);\r\n            }).trigger(\"resize\");\r\n        },\r\n    },\r\n\r\n    modal: {\r\n        setData(selector: string, formData: any) {\r\n            var $modal = $(selector)\r\n            // Setting form values where the key is the id and the value is translated into a dom value\r\n            for (var key in formData) {\r\n                var value = formData[key]\r\n                var $item = $modal.find(\"#\" + key)\r\n                if ($item.attr(\"type\") == \"checkbox\") {\r\n                    $item.prop(\"checked\", value ?? false)\r\n                } else {\r\n                    $item.val(value ?? false)\r\n                }\r\n            }\r\n        },\r\n        getData(selector: string) {\r\n            var $modal = $(selector)\r\n            var form = {}\r\n            $.each($modal.find(\"input, select, textarea\"), (index, item) => {\r\n\r\n                var $item = $(item)\r\n                var key = $item.attr(\"id\")\r\n\r\n                if (!helpers.isNullOfUndefined(key)) {\r\n                    if ($item.attr(\"type\") == \"checkbox\") {\r\n                        console.debug(\"Checkbox:\", $item.prop(\"checked\"))\r\n                        form[key] = $item.prop(\"checked\")\r\n                    } else {\r\n                        form[key] = $item.val()\r\n                    }\r\n                }\r\n            })\r\n\r\n            return form\r\n        },\r\n        open(selector: string, options: {\r\n            mode?: string\r\n            formData?: any\r\n            title?: string\r\n        }) {\r\n            $(\"[data-target='\" + selector + \"']\").click()\r\n\r\n            var $modal = $(selector)\r\n\r\n            if (!helpers.isNullOfUndefined(options.mode)) {\r\n                $modal.attr(\"data-mode\", options.mode)\r\n            }\r\n\r\n            if (!helpers.isNullOfUndefined(options.title)) {\r\n                $modal.find(\".modal-title\").html(options.title)\r\n            }\r\n            helpers.modal.setData(selector, options.formData ?? {})\r\n        },\r\n        init(selector: string, options: {\r\n\r\n            title?: string\r\n            name?: string\r\n\r\n            onsubmit?: {\r\n                [key: string]: (form?: any) => void\r\n            }\r\n\r\n            submitText?: string\r\n\r\n            onopen?: (click?: JQueryEventObject) => void\r\n\r\n            onclose?: () => void\r\n            closeText?: string\r\n\r\n            onload?: (click?: JQueryEventObject, refresh?: (click: JQueryEventObject) => void) => void\r\n            onrefresh?: (click?: JQueryEventObject) => void\r\n\r\n            mode?: string\r\n            formData?: any\r\n\r\n        }) {\r\n            var $modal = $(selector)\r\n\r\n            // Submission\r\n            var $submit = $modal.find(\"input[type=submit]\")\r\n            if (!helpers.isNullOfUndefined(options.onsubmit)) {\r\n                $submit.show()\r\n                $submit.click(() => {\r\n                    var mode = $modal.attr(\"data-mode\")\r\n                    var form = helpers.modal.getData(selector)\r\n                    options.onsubmit[mode](form)\r\n                })\r\n\r\n                if (!helpers.isNullOfUndefined(options.submitText)) {\r\n                    $submit.val(options.submitText)\r\n                }\r\n            } else {\r\n                $submit.hide()\r\n            }\r\n\r\n            // Closeout\r\n            var $close = $modal.find(\"input[data-dismiss=modal]\")\r\n            if (!helpers.isNullOfUndefined(options.onclose)) {\r\n                if (!helpers.isNullOfUndefined(options.closeText)) {\r\n                    $close.val(options.closeText)\r\n                }\r\n            }\r\n\r\n            var $button = $(\"[data-target='\" + selector + \"']\")\r\n            $button.on(\"click\", (click) => {\r\n                $modal.find(\".modal-title\").html(options.title)\r\n                $modal.attr(\"data-mode\", options.mode)\r\n\r\n                // Fire the event when opening the modal\r\n                if (!helpers.isNullOfUndefined(options.onopen)) {\r\n                    options.onopen(click)\r\n                }\r\n\r\n                helpers.modal.setData(selector, options.formData)\r\n\r\n                // Has the correct data already been loaded for this modal\r\n                if ($modal.attr(\"data-loaded\") === helpers.coalesce(options.name, \"modal\")) {\r\n                    if (!helpers.isNullOfUndefined(options.onrefresh)) {\r\n                        options.onrefresh(click)\r\n                    }\r\n                }\r\n                else {\r\n                    if (options.onload) {\r\n                        options.onload(click, options.onrefresh)\r\n                    }\r\n                    $modal.attr(\"data-loaded\", helpers.coalesce(options.name, \"modal\"))\r\n                }\r\n            })\r\n        },\r\n    }\r\n}\r\n\r\n\r\nvar router = {\r\n    baseUrl: \"https://localhost:5001\",\r\n    init: function (baseUrl) {\r\n        if (baseUrl.endsWith(\"/\"))\r\n            router.baseUrl = baseUrl.substring(0, baseUrl.length - 1)\r\n        else\r\n            router.baseUrl = baseUrl;\r\n\r\n        console.debug(`Running on ${router.baseUrl}..`)\r\n    },\r\n    route: function (path: string, parms?: any) {\r\n        var url = path\r\n        if (parms != null && parms != undefined) {\r\n            url += \"?\"\r\n            for (var parm in parms) {\r\n                url += `${parm}=${parms[parm]}`\r\n            }\r\n        }\r\n\r\n        return router.baseUrl + url\r\n    },\r\n    open: function (path, parms?: any) {\r\n        var openTo = path.startsWith(\"http\") ? path : router.route(path, parms)\r\n        window.location.assign(openTo)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar spotify = {\r\n    openTrack(id: string) {\r\n        router.open(\"/Spotify/Track\", { trackId: id })\r\n        //window.location.assign(\"/Spotify/Track?trackId=\" + id)\r\n    },\r\n    openGroup(groupId: string) {\r\n        router.open(\"/Spotify/Groups\", { groupId: groupId })\r\n        //window.location.assign(\"/Spotify/Groups?groupId=\" + groupId)\r\n    },\r\n\r\n\r\n    loadCurrentlyPlaying() {\r\n        $.ajax({\r\n            url: \"/Spotify/GetCurrentlyPlaying\",\r\n            type: \"POST\",\r\n            success: (response) => {\r\n\r\n                console.debug(\"CurrentlyPlaying:\", response)\r\n                var $currentlyPlaying = $(\"#currently-playing\")\r\n\r\n                if (response === null) {\r\n                    console.debug(\"Nothing is playing, removing image\")\r\n                    $currentlyPlaying.children(\"img\").remove()\r\n                }\r\n                else if ($currentlyPlaying.attr(\"data-uri\") === response.Item.Uri) {\r\n                    console.debug(\"Currently playing image is already set\")\r\n                } else {\r\n                    console.debug(\"Currently playing image needs to be set again\")\r\n                    $currentlyPlaying.children(\"img\").remove()\r\n                    $currentlyPlaying.attr(\"data-uri\", response.Item.Uri)\r\n                        .append(\"<img>\").children(\"img\")\r\n                        .attr(\"src\", response.Item.Album.Images[1].Url)\r\n                        .attr(\"alt\", response.Item.Name)\r\n                        .attr(\"title\", response.Item.Name)\r\n                        .attr(\"width\", 100)\r\n                        .attr(\"height\", 100)\r\n                        .click(() => spotify.openTrack(response.Item.Id))\r\n                }\r\n            },\r\n            error: (error) => {\r\n            }\r\n        })\r\n    },\r\n\r\n    page: {\r\n        playlistBuilder: {\r\n            init() {\r\n            }\r\n        },\r\n        track: {\r\n            gridModel: helpers.createGridModel({\r\n                url: router.route(\"/Spotify/GetGroupsForCurrentTrack\"),\r\n                mtype: \"POST\",\r\n                datatype: \"json\",\r\n                idPrefix: \"grp_\",\r\n\r\n                colModel: [\r\n                    { hidden: true, name: \"GroupId\" },\r\n                    { name: \"GroupName\", label: \"Group\" },\r\n                    {\r\n                        name: \"TrackCount\", label: \"Tracks\",\r\n                        formatter: (cellValue, info, model, action) => {\r\n                            return `<span>${cellValue}</span><span class='pull-right' onclick='spotify.openGroup(\"${model.GroupId}\")' style='margin: 5px;'><i class=\"fa fa-headphones\"></i></span>`\r\n                        }\r\n                    },\r\n                    { name: \"AlbumCount\", label: \"Albums\" },\r\n                    { name: \"ArtistCount\", label: \"Artists\" }\r\n                ],\r\n                jsonReader: {\r\n                    root: 'Rows',\r\n                    page: 'Page',\r\n                    total: 'Total',\r\n                    records: 'Records',\r\n                    repeatitems: false,\r\n                    /** @ts-ignore */\r\n                    userdata: 'UserData',\r\n                    id: 'Id',\r\n                    subgrid:\r\n                    {\r\n                        root: 'Rows',\r\n                        repeatitems: false\r\n                    }\r\n                },\r\n                subGrid: true,\r\n                subGridOptions: {\r\n                    expandOnLoad: false,\r\n                    plusicon: 'fa fa-angle-right',\r\n                    minusicon: 'fa fa-angle-down',\r\n                    openicon: 'fa fa-bars'\r\n                },\r\n                subGridRowExpanded: function (subGridId, rowId) {\r\n\r\n                    var subGridTableId = subGridId + \"_t\";\r\n                    $(\"#\" + subGridId).html(\"<table id='\" + subGridTableId + \"'></table>\");\r\n                    var $subGrid = $(\"#\" + subGridTableId)\r\n\r\n                    var row = $(\"#relationship-grid\").jqGrid(\"getLocalRow\", rowId)\r\n                    console.debug(row)\r\n\r\n                    $subGrid.jqGrid({\r\n                        url: router.route(\"/Spotify/GetItemsForGroup\"),\r\n                        mtype: \"POST\",\r\n                        datatype: \"json\",\r\n                        postData: {\r\n                            groupId: row.GroupId\r\n                        },\r\n                        colModel: [\r\n                            { hidden: true, name: \"Id\" },\r\n                            { name: \"Name\" },\r\n                            { name: \"Type\" }\r\n                        ],\r\n                        emptyrecords: 'No records to display',\r\n                        loadonce: true,\r\n                        sortable: true,\r\n                        forceFit: true,\r\n                        //shrinkToFit: true,\r\n                        sortorder: 'asc',\r\n                        styleUI: 'Bootstrap',\r\n                        viewrecords: true\r\n                    })\r\n\r\n                    helpers.grid.setGridWidthToParentWidth($subGrid)\r\n                }\r\n            }),\r\n            init() {\r\n                var $relationshipGrid = $(\"#relationship-grid\").jqGrid(spotify.page.track.gridModel)\r\n                helpers.grid.resizeGridOnWindowResize($relationshipGrid)\r\n\r\n                //spotify.page.track.loadFromServer()\r\n            }\r\n        },\r\n        groups: {\r\n            gridModel: helpers.createGridModel({\r\n                url: router.route(\"/Spotify/GetGroups\"),\r\n                mtype: \"POST\",\r\n                datatype: \"json\",\r\n                idPrefix: \"grp_\",\r\n                colModel: [\r\n                    { hidden: true, name: \"GroupId\" },\r\n                    { name: \"GroupName\", label: \"Group\" },\r\n                    {\r\n                        name: \"TrackCount\", label: \"Tracks\",\r\n                        formatter: (cellValue, info, model, action) => {\r\n                            return `<span>${cellValue}</span><span class='pull-right' onclick='spotify.openGroup(\"${model.GroupId}\")' style='margin: 5px;'><i class=\"fa fa-headphones\"></i></span>`\r\n                        }\r\n                    },\r\n                    { name: \"AlbumCount\", label: \"Albums\" },\r\n                    { name: \"ArtistCount\", label: \"Artists\" }\r\n                ]\r\n            }),\r\n            loadFromServer() {\r\n                var $groupsGrid = $(\"#groupsGrid\")\r\n                $.ajax({\r\n                    type: \"POST\",\r\n                    url: router.route(\"/Spotify/GetGroups\"),\r\n                    success: (response) => {\r\n                        $groupsGrid.setGridParam({ data: response })\r\n                        $groupsGrid.trigger(\"reloadGrid\")\r\n                    }\r\n                })\r\n            },\r\n            init() {\r\n                var $groupsGrid = $(\"#groupsGrid\").jqGrid(spotify.page.groups.gridModel)\r\n                helpers.grid.resizeGridOnWindowResize($groupsGrid)\r\n\r\n                helpers.modal.init(\"#groupModal\", {\r\n                    title: \"Create Group\",\r\n                    mode: \"create\",\r\n                    formData: {\r\n                        groupName: \"\",\r\n                        groupDescription: \"\"\r\n                    },\r\n                    onsubmit: {\r\n                        create: (form) => {\r\n                            $.ajax({\r\n                                url: router.route(\"/Spotify/SaveGroup\"),\r\n                                type: \"POST\",\r\n                                data: {\r\n                                    GroupName: form.groupName,\r\n                                    GroupDescription: form.groupDescription\r\n                                },\r\n                                success: (response) => {\r\n                                    spotify.page.groups.loadFromServer()\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init() {\r\n        helpers.interval.set(spotify.loadCurrentlyPlaying, config.loadCurrentlyPlayingInterval)\r\n    }\r\n}\r\n\r\n"]}