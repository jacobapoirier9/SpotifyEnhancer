{"version":3,"file":"spotify.js","sourceRoot":"","sources":["../ts/spotify.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../lib/jquery/dist/jquery.d.ts\" />\r\n/// <reference path=\"../lib/jqgrid/jqGrid.d.ts\" />\r\n\r\nvar spotify = {\r\n\r\n    openTrack(trackId: string) {\r\n        router.open(\"/Spotify/Track\", { trackId: trackId })\r\n    },\r\n    openGroup(groupId: string) {\r\n        router.open(\"/Spotify/Groups\", { groupId: groupId })\r\n    },\r\n\r\n    loadCurrentlyPlaying() {\r\n        $.ajax({\r\n            url: \"/Spotify/GetCurrentlyPlaying\",\r\n            type: \"POST\",\r\n            success: (response) => {\r\n\r\n                //console.debug(\"CurrentlyPlaying:\", response)\r\n                var $currentlyPlaying = $(\"#currently-playing\")\r\n\r\n                if (response === null) {\r\n                    //console.debug(\"Nothing is playing, removing image\")\r\n                    $currentlyPlaying.html(\"\")\r\n                }\r\n                else if ($currentlyPlaying.attr(\"data-uri\") === response.Item.Uri) {\r\n                    //console.debug(\"Currently playing image is already set\")\r\n                } else {\r\n                    //console.debug(\"Currently playing image needs to be set again\")\r\n                    $currentlyPlaying.html(\"\")\r\n                    $currentlyPlaying.attr(\"data-uri\", response.Item.Uri)\r\n                        .append(\"<img>\").children(\"img\")\r\n                        .attr(\"src\", response.Item.Album.Images[1].Url)\r\n                        .attr(\"alt\", response.Item.Name)\r\n                        .attr(\"title\", response.Item.Name)\r\n                        .attr(\"width\", 120)\r\n                        .attr(\"height\", 120)\r\n                        .click(() => spotify.openTrack(response.Item.Id))\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error(error)\r\n            }\r\n        })\r\n    },\r\n    page: {\r\n        groups: {\r\n            gridModel: helpers.createGridModel({\r\n                url: router.route(\"/Spotify/GetGroups\"),\r\n                mtype: \"POST\",\r\n                datatype: \"json\",\r\n                idPrefix: \"grp_\",\r\n                colModel: [\r\n                    { hidden: true, name: \"GroupId\" },\r\n                    { name: \"GroupName\", label: \"Group\" },\r\n                    {\r\n                        name: \"TrackCount\", label: \"Tracks\",\r\n                        formatter: (cellValue, info, model, action) => {\r\n                            return `<span>${cellValue}</span><span class='pull-right' onclick='spotify.openGroup(\"${model.GroupId}\")' style='margin: 5px;'><i class=\"fa fa-headphones\"></i></span>`\r\n                        }\r\n                    },\r\n                    { name: \"AlbumCount\", label: \"Albums\" },\r\n                    { name: \"ArtistCount\", label: \"Artists\" }\r\n                ]\r\n            }),\r\n            loadFromServer() {\r\n                var $groupsGrid = $(\"#groupsGrid\")\r\n                $.ajax({\r\n                    type: \"POST\",\r\n                    url: router.route(\"/Spotify/GetGroups\"),\r\n                    success: (response) => {\r\n                        $groupsGrid.setGridParam({ data: response })\r\n                        $groupsGrid.trigger(\"reloadGrid\")\r\n                    }\r\n                })\r\n            },\r\n            init() {\r\n                var $groupsGrid = $(\"#groupsGrid\").jqGrid(spotify.page.groups.gridModel)\r\n                helpers.grid.resizeGridOnWindowResize($groupsGrid)\r\n\r\n                helpers.modal.init(\"#groupModal\", {\r\n                    title: \"Create Group\",\r\n                    mode: \"create\",\r\n                    formData: {\r\n                        groupName: \"\",\r\n                        groupDescription: \"\"\r\n                    },\r\n                    onsubmit: {\r\n                        create: (form) => {\r\n                            $.ajax({\r\n                                url: router.route(\"/Spotify/SaveGroup\"),\r\n                                type: \"POST\",\r\n                                data: {\r\n                                    GroupName: form.groupName,\r\n                                    GroupDescription: form.groupDescription\r\n                                },\r\n                                success: (response) => {\r\n                                    spotify.page.groups.loadFromServer()\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init() {\r\n        helpers.interval.set(spotify.loadCurrentlyPlaying, config.loadCurrentlyPlayingInterval)\r\n    }\r\n}\r\n\r\n"]}