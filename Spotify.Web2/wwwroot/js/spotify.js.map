{"version":3,"file":"spotify.js","sourceRoot":"","sources":["../ts/spotify.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../lib/jquery/dist/jquery.d.ts\" />\r\n/// <reference path=\"../lib/jqgrid/jqGrid.d.ts\" />\r\n\r\nvar actions = {\r\n    track: {\r\n        display() {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nvar colModels = {\r\n    track: {\r\n        id() { return { hidden: true, name: \"Id\" } as ColModelOptions },\r\n        name() { return { name: \"Name\", label: \"Track\" } as ColModelOptions },\r\n        artists() {\r\n            return {\r\n\r\n            } as ColModelOptions\r\n        }\r\n    },\r\n    group: {\r\n        groupId() { return { hidden: true, name: \"GroupId\" } as ColModelOptions },\r\n        itemId() { return { hidden: true, name: \"ItemId\" } as ColModelOptions },\r\n        groupName() { return { name: \"GroupName\", label: \"Group\" } as ColModelOptions },\r\n        numberOfTracks() {\r\n            return {\r\n                name: \"TrackCount\", label: \"Tracks\"\r\n            } as ColModelOptions\r\n        },\r\n        isMember() {\r\n            return {\r\n                name: \"IsMember\", label: \"Is Member\", width: 20,\r\n                formatter: (cellValue, info, model, action) => {\r\n                    var icon = \"\"\r\n                    icon = cellValue ? \"fa-minus\" : \"fa-plus\"\r\n                    return `<span class=\"toggle\"><i class='fa ${icon}' data-next-icon=\"\"></i></span>`\r\n                }\r\n            } as ColModelOptions\r\n        }\r\n    }\r\n}\r\n\r\nvar spotify = {\r\n\r\n    openTrack(trackId: string) {\r\n        router.open(\"/Spotify/Track\", { trackId: trackId })\r\n    },\r\n    openGroup(groupId: string) {\r\n        router.open(\"/Spotify/Groups\", { groupId: groupId })\r\n    },\r\n\r\n    loadCurrentlyPlaying() {\r\n        $.ajax({\r\n            url: \"/Spotify/GetCurrentlyPlaying\",\r\n            type: \"POST\",\r\n            success: (response) => {\r\n\r\n                //console.debug(\"CurrentlyPlaying:\", response)\r\n                var $currentlyPlaying = $(\"#currently-playing\")\r\n\r\n                if (response === null) {\r\n                    //console.debug(\"Nothing is playing, removing image\")\r\n                    $currentlyPlaying.html(\"\")\r\n                }\r\n                else if ($currentlyPlaying.attr(\"data-uri\") === response.Item.Uri) {\r\n                    //console.debug(\"Currently playing image is already set\")\r\n                } else {\r\n                    //console.debug(\"Currently playing image needs to be set again\")\r\n                    $currentlyPlaying.html(\"\")\r\n                    $currentlyPlaying.attr(\"data-uri\", response.Item.Uri)\r\n                        .append(\"<img>\").children(\"img\")\r\n                        .attr(\"src\", response.Item.Album.Images[1].Url)\r\n                        .attr(\"alt\", response.Item.Name)\r\n                        .attr(\"title\", response.Item.Name)\r\n                        .attr(\"width\", 120)\r\n                        .attr(\"height\", 120)\r\n                        .click(() => spotify.openTrack(response.Item.Id))\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error(error)\r\n            }\r\n        })\r\n    },\r\n    page: {\r\n        groupSingle: {\r\n            init() {\r\n                var $tracksGrid = $(\"#tracksGrid\").jqGrid(helpers.createGridModel({\r\n                    url: router.route(\"/Spotify/CachedTracks\"),\r\n                    colModel: [\r\n                        colModels.track.id(),\r\n                        colModels.track.name()\r\n                    ]\r\n                }))\r\n\r\n                helpers.grid.resizeGridOnWindowResize($tracksGrid)\r\n            }\r\n        },\r\n        trackSingle: {\r\n            init() {\r\n                var $trackGroupsGrid = $(\"#trackGroupsGrid\").jqGrid(helpers.createGridModel({\r\n                    url: router.route(\"/Spotify/CachedGroups\"),\r\n                    colModel: [\r\n                        colModels.group.groupId(),\r\n                        colModels.group.itemId(),\r\n                        colModels.group.groupName(),\r\n                        colModels.group.isMember() \r\n                    ]\r\n                }))\r\n                helpers.grid.setGridWidthToParentWidth($trackGroupsGrid)\r\n\r\n                var $recommendationsGrid = $(\"#recommendationsGrid\").jqGrid(helpers.createGridModel({\r\n                    url: router.route(\"/Spotify/CachedRecommendations\"),\r\n                    colModel: [\r\n                        colModels.track.id(),\r\n                        colModels.track.name()\r\n                    ]\r\n                }))\r\n\r\n                helpers.grid.setGridWidthToParentWidth($recommendationsGrid)\r\n                $recommendationsGrid.jqGrid(\"setGridHeight\", 500)\r\n            }\r\n        },\r\n        groupsMultiple: {\r\n            init() {\r\n                var $groupsGrid = $(\"#groupsGrid\").jqGrid(helpers.createGridModel({\r\n                    url: router.route(\"/Spotify/CachedGroups\"),\r\n                    colModel: [\r\n                        colModels.group.groupId(),\r\n                        colModels.group.itemId(),\r\n                        colModels.group.groupName(),\r\n                        colModels.group.numberOfTracks()\r\n                    ]\r\n                }))\r\n\r\n                helpers.grid.resizeGridOnWindowResize($groupsGrid)\r\n            }\r\n        }\r\n    },\r\n    init() {\r\n        helpers.interval.set(spotify.loadCurrentlyPlaying, config.loadCurrentlyPlayingInterval)\r\n    }\r\n}\r\n\r\n"]}