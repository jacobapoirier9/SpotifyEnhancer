{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../ts/helpers.ts"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG;IACV,QAAQ,EAAE;QACN,GAAG,EAAH,UAAI,QAAoB,EAAE,QAAgB;YACtC,QAAQ,EAAE,CAAA;YACV,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;QACnC,CAAC;KACJ;IAED,QAAQ,EAAR;QAAS,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,2BAAgB;;QACrB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;gBACvC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAA;aACnB;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAED,iBAAiB,EAAjB,UAAkB,IAAS;QACvB,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAA;IAC9C,CAAC;IAED,OAAO,EAAP,UAAQ,QAAgB;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;IACxC,CAAC;IAED,eAAe,EAAf,UAAgB,OAAsB;QAClC,IAAI,QAAQ,GAAkB;YAC1B,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE,MAAM;YACb,YAAY,EAAE,uBAAuB;YACrC,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,WAAW;YACpB,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE;gBACR,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,SAAS;gBAClB,WAAW,EAAE,KAAK;aACrB;SACJ,CAAA;QAED,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC3B,OAAO,QAAQ,CAAA;IACnB,CAAC;IACD,IAAI,EAAE;QACF,yBAAyB,EAAE,UAAU,KAAa;YAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;YACrE,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC;QACD,6BAA6B,EAAE,UAAU,KAAa;YAClD,aAAa;YACb,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAChI,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;QACD,wBAAwB,EAAE,UAAU,KAAa;YAC7C,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,6CAA6C,EAAE;gBACxD,UAAU,CAAC;oBACP,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;oBAClD,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBAClD,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;KACJ;IAED,KAAK,EAAE;QACH,MAAM,EAAN,UAAO,OAAoB;YACvB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QAC1B,CAAC;KACJ;IAED,KAAK,EAAE;QACH,OAAO,EAAP,UAAQ,QAAgB,EAAE,QAAa;YACnC,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;YACxB,2FAA2F;YAC3F,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;gBACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;gBACzB,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;gBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE;oBAClC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,KAAK,CAAC,CAAA;iBACxC;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,KAAK,CAAC,CAAA;iBAC5B;aACJ;QACL,CAAC;QACD,OAAO,EAAP,UAAQ,QAAgB;YACpB,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;YACxB,IAAI,IAAI,GAAG,EAAE,CAAA;YACb,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE,UAAC,KAAK,EAAE,IAAI;gBAEvD,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;gBACnB,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;gBAE1B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;oBACjC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE;wBAClC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA;wBACjD,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;qBACpC;yBAAM;wBACH,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAA;qBAC1B;iBACJ;YACL,CAAC,CAAC,CAAA;YAEF,OAAO,IAAI,CAAA;QACf,CAAC;QACD,IAAI,EAAJ,UAAK,QAAgB,EAAE,OAItB;;YACG,CAAC,CAAC,gBAAgB,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC,KAAK,EAAE,CAAA;YAE7C,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;YAExB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC1C,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC,CAAA;aACzC;YAED,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC3C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aAClD;YACD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,QAAE,OAAO,CAAC,QAAQ,mCAAI,EAAE,CAAC,CAAA;QAC3D,CAAC;QACD,IAAI,EAAJ,UAAK,QAAgB,EAAE,OAsBtB;YACG,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;YAExB,aAAa;YACb,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;YAC/C,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC9C,OAAO,CAAC,IAAI,EAAE,CAAA;gBACd,OAAO,CAAC,KAAK,CAAC;oBACV,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;oBACnC,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;oBAC1C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAA;gBAChC,CAAC,CAAC,CAAA;gBAEF,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBAChD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;iBAClC;aACJ;iBAAM;gBACH,OAAO,CAAC,IAAI,EAAE,CAAA;aACjB;YAED,WAAW;YACX,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAA;YACrD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC7C,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;oBAC/C,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;iBAChC;aACJ;YAED,IAAI,OAAO,GAAG,CAAC,CAAC,gBAAgB,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAA;YACnD,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;gBACtB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;gBAC/C,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC,CAAA;gBAEtC,wCAAwC;gBACxC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAC5C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;iBACxB;gBAED,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAA;gBAEjD,0DAA0D;gBAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;oBACxE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBAC/C,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;qBAC3B;iBACJ;qBACI;oBACD,IAAI,OAAO,CAAC,MAAM,EAAE;wBAChB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,CAAA;qBAC3C;oBACD,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAA;iBACtE;YACL,CAAC,CAAC,CAAA;QACN,CAAC;KACJ;CACJ,CAAA","sourcesContent":["var helpers = {\r\n    interval: {\r\n        set(callback: () => void, interval: number) {\r\n            callback()\r\n            setInterval(callback, interval)\r\n        }\r\n    },\r\n\r\n    coalesce(...params: any[]) {\r\n        for (var i in params) {\r\n            if (!helpers.isNullOfUndefined(params[i])) {\r\n                return params[i]\r\n            }\r\n        }\r\n        return null\r\n    },\r\n\r\n    isNullOfUndefined(item: any) {\r\n        return item === null || item === undefined\r\n    },\r\n\r\n    getJson(selector: string) {\r\n        return JSON.parse($(selector).val())\r\n    },\r\n\r\n    createGridModel(options: JqGridOptions): JqGridOptions {\r\n        var defaults: JqGridOptions = {\r\n            datatype: 'json',\r\n            mtype: \"JSON\",\r\n            emptyrecords: 'No records to display',\r\n            gridview: true,\r\n            loadonce: true,\r\n            rowNum: 50,\r\n            forceFit: true,\r\n            sortable: true,\r\n            sortorder: 'asc',\r\n            styleUI: 'Bootstrap',\r\n            viewrecords: true,\r\n            jsonReader: {\r\n                root: 'Rows',\r\n                page: 'Page',\r\n                total: 'Total',\r\n                records: 'Records',\r\n                repeatitems: false,\r\n            }\r\n        }\r\n\r\n        $.extend(defaults, options)\r\n        return defaults\r\n    },\r\n    grid: {\r\n        setGridWidthToParentWidth: function ($grid: JQuery) {\r\n            var width = Math.floor($grid.closest(\".ui-jqgrid\").parent().width());\r\n            $grid.jqGrid(\"setGridWidth\", width);\r\n        },\r\n        setGridHeightToViewportHeight: function ($grid: JQuery) {\r\n            // @ts-ignore\r\n            var height = parseInt($(window).height() - $grid.offset().top - ($(\"header\").height() || 0) - ($(\".box-footer\").height() || 0));\r\n            $grid.jqGrid(\"setGridHeight\", height);\r\n        },\r\n        resizeGridOnWindowResize: function ($grid: JQuery) {\r\n            $(window).on(\"resize expanded.pushMenu collapsed.pushMenu\", function () {\r\n                setTimeout(function () {\r\n                    helpers.grid.setGridHeightToViewportHeight($grid);\r\n                    helpers.grid.setGridWidthToParentWidth($grid);\r\n                }, 350);\r\n            }).trigger(\"resize\");\r\n        },\r\n    },\r\n\r\n    icons: {\r\n        toggle(element: HTMLElement) {\r\n            console.debug(element)\r\n        }\r\n    },\r\n\r\n    modal: {\r\n        setData(selector: string, formData: any) {\r\n            var $modal = $(selector)\r\n            // Setting form values where the key is the id and the value is translated into a dom value\r\n            for (var key in formData) {\r\n                var value = formData[key]\r\n                var $item = $modal.find(\"#\" + key)\r\n                if ($item.attr(\"type\") == \"checkbox\") {\r\n                    $item.prop(\"checked\", value ?? false)\r\n                } else {\r\n                    $item.val(value ?? false)\r\n                }\r\n            }\r\n        },\r\n        getData(selector: string) {\r\n            var $modal = $(selector)\r\n            var form = {}\r\n            $.each($modal.find(\"input, select, textarea\"), (index, item) => {\r\n\r\n                var $item = $(item)\r\n                var key = $item.attr(\"id\")\r\n\r\n                if (!helpers.isNullOfUndefined(key)) {\r\n                    if ($item.attr(\"type\") == \"checkbox\") {\r\n                        console.debug(\"Checkbox:\", $item.prop(\"checked\"))\r\n                        form[key] = $item.prop(\"checked\")\r\n                    } else {\r\n                        form[key] = $item.val()\r\n                    }\r\n                }\r\n            })\r\n\r\n            return form\r\n        },\r\n        open(selector: string, options: {\r\n            mode?: string\r\n            formData?: any\r\n            title?: string\r\n        }) {\r\n            $(\"[data-target='\" + selector + \"']\").click()\r\n\r\n            var $modal = $(selector)\r\n\r\n            if (!helpers.isNullOfUndefined(options.mode)) {\r\n                $modal.attr(\"data-mode\", options.mode)\r\n            }\r\n\r\n            if (!helpers.isNullOfUndefined(options.title)) {\r\n                $modal.find(\".modal-title\").html(options.title)\r\n            }\r\n            helpers.modal.setData(selector, options.formData ?? {})\r\n        },\r\n        init(selector: string, options: {\r\n\r\n            title?: string\r\n            name?: string\r\n\r\n            onsubmit?: {\r\n                [key: string]: (form?: any) => void\r\n            }\r\n\r\n            submitText?: string\r\n\r\n            onopen?: (click?: JQueryEventObject) => void\r\n\r\n            onclose?: () => void\r\n            closeText?: string\r\n\r\n            onload?: (click?: JQueryEventObject, refresh?: (click: JQueryEventObject) => void) => void\r\n            onrefresh?: (click?: JQueryEventObject) => void\r\n\r\n            mode?: string\r\n            formData?: any\r\n\r\n        }) {\r\n            var $modal = $(selector)\r\n\r\n            // Submission\r\n            var $submit = $modal.find(\"input[type=submit]\")\r\n            if (!helpers.isNullOfUndefined(options.onsubmit)) {\r\n                $submit.show()\r\n                $submit.click(() => {\r\n                    var mode = $modal.attr(\"data-mode\")\r\n                    var form = helpers.modal.getData(selector)\r\n                    options.onsubmit[mode](form)\r\n                })\r\n\r\n                if (!helpers.isNullOfUndefined(options.submitText)) {\r\n                    $submit.val(options.submitText)\r\n                }\r\n            } else {\r\n                $submit.hide()\r\n            }\r\n\r\n            // Closeout\r\n            var $close = $modal.find(\"input[data-dismiss=modal]\")\r\n            if (!helpers.isNullOfUndefined(options.onclose)) {\r\n                if (!helpers.isNullOfUndefined(options.closeText)) {\r\n                    $close.val(options.closeText)\r\n                }\r\n            }\r\n\r\n            var $button = $(\"[data-target='\" + selector + \"']\")\r\n            $button.on(\"click\", (click) => {\r\n                $modal.find(\".modal-title\").html(options.title)\r\n                $modal.attr(\"data-mode\", options.mode)\r\n\r\n                // Fire the event when opening the modal\r\n                if (!helpers.isNullOfUndefined(options.onopen)) {\r\n                    options.onopen(click)\r\n                }\r\n\r\n                helpers.modal.setData(selector, options.formData)\r\n\r\n                // Has the correct data already been loaded for this modal\r\n                if ($modal.attr(\"data-loaded\") === helpers.coalesce(options.name, \"modal\")) {\r\n                    if (!helpers.isNullOfUndefined(options.onrefresh)) {\r\n                        options.onrefresh(click)\r\n                    }\r\n                }\r\n                else {\r\n                    if (options.onload) {\r\n                        options.onload(click, options.onrefresh)\r\n                    }\r\n                    $modal.attr(\"data-loaded\", helpers.coalesce(options.name, \"modal\"))\r\n                }\r\n            })\r\n        },\r\n    }\r\n}"]}